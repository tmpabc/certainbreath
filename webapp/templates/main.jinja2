<!DOCTYPE html>
<html>
<title>Certain Breath</title>
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<script src="https://d3js.org/d3.v4.min.js"></script>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Raleway">
<style>
body,h1 {font-family: "Raleway", sans-serif}
body, html {height: 100%;font-family:Verdana,sans-serif;font-size:15px;line-height:1.5}
.bgimg {
  background-color: rgb(242, 198, 218);
  min-height: 100%;
  background-position: center;
  background-size: cover;
  
  }
#chart_pressure {
        max-width: 600px;
        max-height: 400px;
  }
#chart_temperature {
        max-width: 600px;
        max-height: 400px;
        position: relative;}
.display-topleft{position:absolute;left:0;top:0}.display-topright{position:absolute;right:0;top:0}
.display-bottomleft{position:absolute;left:0;bottom:0}.display-bottomright{position:absolute;right:0;bottom:0}
.display-middle{position:absolute;top:25%;left:50%;transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%)}
.display-left{position:absolute;top:50%;left:10%;transform:translate(0%,-50%);-ms-transform:translate(-0%,-50%)}
.display-right{position:absolute;top:50%;right:10%;transform:translate(0%,-50%);-ms-transform:translate(0%,-50%)}
.display-topmiddle{position:absolute;left:50%;top:0;transform:translate(-50%,0%);-ms-transform:translate(-50%,0%)}
.display-bottommiddle{position:absolute;left:50%;bottom:15%;transform:translate(-50%,0%);-ms-transform:translate(-50%,0%)}
.display-container:hover .display-hover{display:block}.display-container:hover span.display-hover{display:inline-block}.display-hover{display:none}
.display-position{position:absolute}
.animate-opacity{animation:opac 0.8s}@keyframes opac{from{opacity:0} to{opacity:1}}
.text-white,.w3-hover-text-white:hover{color:rgb(38,38,38)!important}
.padding-large{padding:12px 24px!important}
.xlarge{font-size:24px!important}
.border-grey{border-color:#9e9e9e!important}
.large{font-size:18px!important}
.center{text-align:center!important}

</style>
<body>

<div class="bgimg display-container animate-opacity text-white">
   <div class="display-topmiddle padding-large xlarge">
     <img src="https://i.ibb.co/pwd7bh2/Certain-Breath-wiki.png" align="middle" width=150>
  </div>
  <div class="display-middle">
        <h1 id="no_breathing_text"></h1>
        <h1 id="hyperventilation_text"></h1>
        <h1 id="temperature_text"></h1>
    </div>
<div class="display-left">
    <div id="chart_pressure"></div>
</div>
<div class="display-right">
    <div id="chart_temperature"></div>
</div>
    <div class="display-bottommiddle">
    <p class="large center">Protecting your baby for "30" years</p>
  </div>
  <div class="display-bottomleft padding-large text-white">
  Powered by <a href="https://github.com/tmpabc/certainbreath/" target="_blank" style="color:rgb(38,38,38)">Certain Breath</a>
  </div>
</div>

    <script src="js/chart.js"></script>
    <script>
    var pressureArr = [];
    var temperatureArr = [];
    var MAX_LENGTH = 100;
    var duration = 500;
    var pressureChart = realTimeLineChart();
    var temperatureChart = realTimeLineChart();
    pressureChart.duration(duration);
    temperatureChart.duration(duration);
    var lastNoBreathingAlert;
    var lastHyperVentilationAlert;
    var socket = new WebSocket("{{wsURL}}");
    socket.onmessage = function(event) {

      var msg = JSON.parse(event.data);
      msg.forEach(x => x.time = new Date(x.time));
      pressureArr.push(...msg.filter(d => d.type.toLowerCase().includes("pressure")));
      temperatureArr.push(...msg.filter(d => d.type.toLowerCase().includes("temperature")));

      var noBreathingAlerts = msg.filter(d => d.type == "noB");
      if (noBreathingAlerts.length > 0) {
          lastNoBreathingAlert = noBreathingAlerts[noBreathingAlerts.length - 1];
          alertNoBreathing(true);
      }

      var hyperVentilationAlerts = msg.filter(d => d.type == "hyperV");
      if (hyperVentilationAlerts.length > 0) {
          lastHyperVentilationAlert = hyperVentilationAlerts[hyperVentilationAlerts.length - 1];
          alertHyperVentilation(true);
      }

      var temperatureAlerts = msg.filter(d => d.type == "highT");
      if (temperatureAlerts.length > 0) {
          lastHighTemperatureAlert = temperatureAlerts[temperatureAlerts.length - 1];
          alertHighTemperature(true);
      }

      if (pressureArr.length > MAX_LENGTH) {
        pressureArr = pressureArr.slice(pressureArr.length - MAX_LENGTH);
      }

      if (temperatureArr.length > MAX_LENGTH) {
        temperatureArr = temperatureArr.slice(temperatureArr.length - MAX_LENGTH);
      }

      d3.select("#chart_pressure").datum(pressureArr).call(pressureChart);
      d3.select("#chart_temperature").datum(temperatureArr).call(temperatureChart);
      };

    function alertNoBreathing(enable) {
        if (enable) {
            d3.select("#no_breathing_text").text("No breathing detected!");
        } else {
            d3.select("#no_breathing_text").text("");
        }
    }

    function alertHighTemperature(enable) {
        if (enable) {
            d3.select("#temperature_text").text("Fever detected!");
        } else {
            d3.select("#temperature_text").text("");
        }
    }

    function alertHyperVentilation(enable) {
        if (enable) {
            d3.select("#hyperventilation_text").text("Hyper ventilation detected!");
        } else {
            d3.select("#hyperventilation_text").text("");
        }
    }

    function retireAlerts() {
        if (typeof lastHyperVentilationAlert !== 'undefined' && +lastHyperVentilationAlert.time < (new Date()).getTime() - 1000) {
            alertHyperVentilation(false);
        }
        if (typeof lastNoBreathingAlert !== 'undefined' && +lastNoBreathingAlert.time < (new Date()).getTime() - 1000) {
            alertNoBreathing(false);
        }
    }

    function resize() {
      if (d3.select("#chart_pressure svg").empty() || d3.select("#chart_temperature svg").empty()) {
        return;
      }
      pressureChart.width(+d3.select("#chart_pressure").style("width").replace(/(px)/g, ""));
      temperatureChart.width(+d3.select("#chart_temperature").style("width").replace(/(px)/g, ""));
      d3.select("#chart_pressure").call(pressureChart);
      d3.select("#chart_temperature").call(temperatureChart);
    }
    document.addEventListener("DOMContentLoaded", function() {
      window.setInterval(retireAlerts, 500);
      d3.select("#chart_pressure").datum(pressureArr).call(pressureChart);
      d3.select("#chart_temperature").datum(temperatureArr).call(temperatureChart);
      d3.select(window).on('resize', resize);
    });
    </script>

</body>
</html>
